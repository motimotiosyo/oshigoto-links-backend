require "digest"

def slugify(str)
  s = I18n.transliterate(str.to_s).to_s.parameterize
  s.presence || "x#{Digest::SHA1.hexdigest(str.to_s)[0, 8]}"
end

# 職種一覧（大分類 => 中分類配列）
occupations = {
  "販売・サービス系" => %w[店長 店舗販売 コールセンター 教育・スクール 観光・宿泊 冠婚葬祭 美容 飲食・小売 調理 警備 清掃 その他・不明],
  "営業系" => %w[法人営業 個人営業 技術営業 カスタマーサクセス その他・不明],
  "企画・管理系" => %w[経営企画 商品企画・マーケティング 人事 経理・財務 法務・知財 広報・IR 総務 情報システム 秘書 その他・不明],
  "事務・オフィス系" => %w[一般事務 営業事務 貿易事務 医療事務 IT事務 金融・保険事務 受付 データ入力 カスタマーサポート その他・不明],
  "IT系" => %w[ITコンサル インフラコンサル プリセールス 社内SE WEBエンジニア アプリケーションエンジニア データベース・セキュリティエンジニア サーバーエンジニア テクニカルサポート・ヘルプデスク その他・不明],
  "クリエイティブ系" => %w[デザイナー（グラフィック/UIUX/ファッション） パタンナー ライター・編集 映像・音響 広告・ディレクション その他・不明],
  "製造系" => %w[工場長 生産 製造 品質保証 品質管理 生産管理 生産技術 その他・不明],
  "技術系" => %w[基礎研究 製品企画 設計 組み込みエンジニア 評価・実験 研究・分析 生産技術 整備士 その他・不明],
  "建築・土木系" => %w[建築設計 建築デザイン 積算 測量 環境調査 施工管理 プラントエンジニア 設備保全 保守 設備メンテナンス その他・不明],
  "医療系専門職系" => %w[医師 歯科医師 看護師 薬剤師 診療放射線技師 臨床検査技師 理学療法士 作業療法士 助産師 研究 その他・不明],
  "士業" => %w[弁護士 司法書士 行政書士 公認会計士・税理士 社労士 臨床心理士 社会福祉士 その他士業 その他・不明],
  "物流・運輸系" => %w[運転士・ドライバー 倉庫作業 物流管理 購買・調達 その他・不明],
  "公務・団体職系" => %w[公務員(行政) 公務員(技術) 団体職員(NPO/国際協力など) その他・不明],
  "家庭人" => %w[家事 育児 介護 地域活動 自営業補助 その他・不明],
  "その他・不明" => %w[その他・不明]
}

occupations.each.with_index(1) do |(parent, children), i|
  occ = Occupation.find_or_create_by!(code: slugify(parent)) { |r| r.name = parent; r.position = i }
  children.each.with_index(1) do |child, j|
    OccupationCategory.find_or_create_by!(occupation: occ, code: slugify(child)) { |c| c.name = child; c.position = j }
  end
end

