name: API Spec Guard

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'app/**'
      - 'config/**'
      - 'db/**'
      - 'spec/**'
      - 'test/**'
      - '.github/workflows/**'

jobs:
  api-spec-lint:
    name: OpenAPI Spec Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install Spectral
        run: npm install -g @stoplight/spectral-cli
        
      - name: Lint OpenAPI spec
        run: spectral lint docs/openapi.yaml --fail-severity warn

  rails-tests:
    name: Rails Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    env:
      RAILS_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          
      - name: Setup database
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
          
      - name: Check Rails application load
        run: bundle exec rails runner "puts 'Rails API application loaded successfully'"
        
      - name: Run tests (if available)
        run: |
          if [ -d "test" ] && [ "$(find test -name '*.rb' | head -1)" ]; then
            bundle exec rails test
          else
            echo "No tests found, skipping test execution"
          fi
          
      - name: Run RSpec (if available)
        run: |
          if bundle show rspec-rails > /dev/null 2>&1; then
            if [ -d "spec" ] && [ "$(find spec -name '*.rb' | head -1)" ]; then
              bundle exec rspec
            else
              echo "RSpec gem available but no spec files found, skipping"
            fi
          else
            echo "RSpec not available, skipping"
          fi

  api-contract-validation:
    name: API Contract Validation
    runs-on: ubuntu-latest
    needs: [api-spec-lint, rails-tests]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    env:
      RAILS_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          
      - name: Setup database
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
          
      - name: Test API contract compliance
        run: |
          # Committee middleware will validate requests/responses during tests
          if [ -d "test" ] && [ "$(find test -name '*.rb' | head -1)" ]; then
            bundle exec rails test
            echo "API contract validation completed with tests"
          else
            echo "No tests available for contract validation"
            bundle exec rails runner "puts 'Rails API application loaded with Committee validation'"
            echo "API contract validation completed without tests"
          fi